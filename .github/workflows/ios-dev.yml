name: Distribute IPA to Firebase App Distribution

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: push
 # FIXME on:
 #  repository_dispatch
 #    types: ['distribute-ipa']
#  gem install fastlane bundler cocoapods

jobs:
  deploy_to_app_distribution:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2

    - name: Check all required variables
      run: sh ./scripts/ios-dev-check.sh
      env:
        USER_NAME: ${{ secrets.GITLAB_USER_NAME }}
        USER_EMAIL: ${{ secrets.GITLAB_USER_EMAIL }}
        SSH_KNOWN_HOST: ${{ secrets.SSH_KNOWN_HOST }}
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        CURRENT_BRANCH: setup-ios-builds
        REPO_NAME: ${{ secrets.REPO_NAME }}
        DATABASE_DEFAULT_ENCRYPTION_KEY: ${{ secrets.DATABASE_DEFAULT_ENCRYPTION_KEY }}
        APP_METRICA_API_KEY: ${{ secrets.APP_METRICA_API_KEY }}
        FIREBASEAPPDISTRO_APP: ${{ secrets.FIREBASE_APP_ID_IOS }}
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
        FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
        FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}

    - name: Configure git users
      run: |
          git config --global user.name ${{ secrets.GITLAB_USER_NAME }}
          git config --global user.email ${{ secrets.GITLAB_USER_EMAIL }}

    - name: Setup SSH keys and known_hosts
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan ${{ secrets.SSH_KNOWN_HOST }} >> ~/.ssh/known_hosts
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add ~/.ssh/id_rsa

    - name: Get repository
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      run: |
        rm -rf ./.git ./.github ./*
        ls -la ./
        git clone ${{ secrets.REPO_URL }} --branch=setup-ios-builds --single --depth=1 ./
        git log -1


    - name: Install Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    
    - name: Install Ruby 2.x
      uses: actions/setup-ruby@v1
      with:
        ruby-version: '2.x'

    - name: Install Firebase
      run: |
        curl -sL https://firebase.tools | bash
        which firebase
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      shell: bash

    - name: Install packages
      run: yarn install --frozen-lockfile --cache-folder /tmp/cache/yarn
    
    - name: Check all vars
      run: yarn check-variables

    - name: Install pods
      run: pod install
      working-directory: ios

    - name: Install gem dependencies
      run: |
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3

    - name: Run fastlane line "fastlane ios buildipa" with PROD ENV variables
      run: bundle exec fastlane ios buildipa
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
        DATABASE_DEFAULT_ENCRYPTION_KEY: ${{ secrets.DATABASE_DEFAULT_ENCRYPTION_KEY }}
        APP_METRICA_API_KEY: ${{ secrets.APP_METRICA_API_KEY }}
        FIREBASEAPPDISTRO_APP: ${{ secrets.FIREBASE_APP_ID_IOS }}
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
        FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
        CURRENT_BRANCH: setup-ios-builds
        FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
